include other file: source <path> or . <path>
export PATH="${PATH}:<path>"
kill -SIGKILL <pid>
kill -9w <pid>
var=$(<file) read file content to var, strip trailing newline
export -p or printenv
alias <alias>=<command>   set command alias in .bashrc or .zshrc
-f check file exist
-d check dir exist
wc <file> print newline -l, word -m, bytecount -c
wc list -l | sed -E 's/ .*//'


return value of expression ( expression )
! negate	&& AND		|| OR
=~  regex	compare against regex


math
`expr $x + 1`
math operator	$((   ))

read specific lines with awk
awk '(NR==<int>) {print $0}' <file>
(NR<=30 && NR>=10) || (...)

or with sed
sed -n <int>,<int>p <file>
`<command>` = $(<command>)
=======
escape exclamation mark with single quote
/usr/share/bash-completion/completions/


parameters
$* > single  
$@ > positional " " 
list > space separated 


=============
m=(" " " ")
select x in $m
do
	case $x in
		" ")
		;;
	esac
done

User input 1 to xxx


============

read -p "" x; echo $x
OR
while read -r x
	do
		echo $x
done < /etc/...

read -n 1 -s -r -p "Press any key to continue"
python -c print(...math...)
print only line count
	awk 'END { print NR }' <file>
	sed -n '$=' <file>
	wc -l < <file>

--------------
Shorthand If
type "" &> /dev/null && echo true || echo false
[ -z "$..." ] && <command>

/sys/devices/virtual/dmi/id/
-i Get hardware info
Get details hardware lshw -c 

==================
echo << EOF > output.txt
xxxxxxx
EOF
==================

